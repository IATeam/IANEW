<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Aug 9, 2014 1:06:21 PM by Hibernate Tools 4.0.0 -->
<hibernate-mapping>
 <class catalog="ianew" name="uow.ia.bean.Contacts" table="Contacts">
  <id name="id" type="java.lang.Integer">
   <column name="id"/>
   <generator class="identity"/>
  </id>
  <property generated="never"  name="firstname" type="string">
   <column name="firstname"/>
  </property>
  <property generated="never"  name="lastname" type="string">
   <column name="lastname"/>
  </property>
  <property generated="never"  name="othername" type="string">
   <column name="othername"/>
  </property>
  <property generated="never"  name="mobilephone" type="string">
   <column name="mobilephone"/>
  </property>
  <property generated="never"  name="email" type="string">
   <column name="email"/>
  </property>
  <property generated="never"  name="accommodationComment" type="string">
   <column name="accommodation_comment"/>
  </property>
  <property generated="never" 
   name="culturalBackgroundComment" type="string">
   <column name="cultural_background_comment"/>
  </property>
  <property generated="never"  name="identification" type="string">
   <column name="identification"/>
  </property>
  <property generated="never"  name="dob" type="date">
   <column length="10" name="DOB"/>
  </property>
  <property generated="never"  name="createdUserId" type="java.lang.Integer">
   <column name="created_user_id"/>
  </property>
  <property generated="never"  name="createdDateTime" type="date">
   <column length="10" name="created_date_time"/>
  </property>
  <property generated="never"  name="updatedUserId" type="java.lang.Integer">
   <column name="updated_user_id"/>
  </property>
  <property generated="never"  name="updatedDateTime" type="date">
   <column length="10" name="updated_date_time"/>
  </property>
  
  <!-- Many to one relationship -->
  <many-to-one class="uow.ia.bean.AccommodationTypes" name="accommodation">
  	<column name="accommodation_id" not-null="false"/>
  </many-to-one>
  <many-to-one class="uow.ia.bean.ContactTypes" name="contactType">
   <column name="contact_type_id" not-null="true"/>
  </many-to-one>
  <many-to-one class="uow.ia.bean.TitleTypes" name="titleType">
   <column name="title_id" not-null="false"/>
  </many-to-one>
  <many-to-one class="uow.ia.bean.GenderTypes" name="genderType">
   <column name="gender_id" not-null="false"/>
  </many-to-one>
  <many-to-one class="uow.ia.bean.CulturalBackgroundTypes" name="culturalBackground">
   <column name="cultural_background_id" not-null="false"/>
  </many-to-one>
  <many-to-one class="uow.ia.bean.DangerTypes" name="dangerType">
   <column name="danger_flag_id" not-null="false"/>
  </many-to-one>
  <many-to-one class="uow.ia.bean.StatusTypes" name="status">
  	<column name="status_id" not-null="false"/>
  </many-to-one>
  
  <!--  One to many relationship  -->
  <set fetch="select" inverse="true" name="addressesSet" sort="unsorted" table="Addresses">
   <key>
    <column name="contact_id" not-null="true"/>
   </key>
   <one-to-many class="uow.ia.bean.Addresses"/>
  </set>
  
  <set fetch="select" inverse="true" name="enquiriesSet" table="Enquiries" order-by="id" cascade="save-update, delete, delete-orphan">
  	<key>
  		<column name="contact_id" not-null="true"/>
  	</key>
  	<one-to-many class="uow.ia.bean.Enquiries"/>
  </set>
  
  <set fetch="select" inverse="true" name="individualCasesSet" sort="unsorted" table="Individual_Cases" order-by="id">
  	<key>
  		<column name="client_id" not-null="true"/>
  	</key>
  	<one-to-many class="uow.ia.bean.IndividualCases"/>
  </set>
  
  <set fetch="select" inverse="true" name="employmentsSet" table="Contact_Employments" order-by="id" cascade="save-update">
  	<key>
  		<column name="contact_id" not-null="false"/>
  	</key>
  	<one-to-many class="uow.ia.bean.ContactEmployments"/>
  </set>
  
  <set fetch="select" inverse="true" name="planDevelopersSet" table="Plan_Developers" order-by="id">
  	<key>
  		<column name="contact_id" not-null="true"/>
  	</key>
  	<one-to-many class="uow.ia.bean.PlanDevelopers"/>
  </set>
  <set fetch="select" inverse="true" name="advocateCasesSet" table="Individual_Cases" order-by="id">
  	<key>
  		<column name="advocate_id" not-null="false"/>
  	</key>
  	<one-to-many class="uow.ia.bean.IndividualCases"/>
  </set>
 
	 <!-- Many-to-many relationship -->
	 <set name="disabilitiesSet" table="Client_Disabilities" inverse="false" fetch="select" cascade="all">
	 	<key column="contact_id"/>
	 	<one-to-many class="uow.ia.bean.ClientDisabilities"/>
	 </set>
 </class>
 
 <sql-query name="findById">select * from Contacts where id = :p_id</sql-query>
 <sql-query name="findByFirstname">select * from Contacts where lower(firstname) like lower(:firstname)</sql-query>
 <sql-query name="findByLastname">select * from Contacts where lower(lastname) like lower(:lastname)</sql-query>
 <sql-query name="findByFullname">select * from Contacts where lower(firstname) like lower(:firstname) and lower(lastname) like lower(:lastname)</sql-query>
</hibernate-mapping>
